steps:
  - name: ":go: Check go fmt"
    key: go-fmt
    command: .buildkite/steps/test-go-fmt.sh
    plugins:
      - docker#v3.1.0:
          image: "golang:1.19"
          workdir: /go/src/github.com/buildkite/buildkite-agent-scaler

  - name: ":golang: Run tests"
    key: test
    command: .buildkite/steps/tests.sh
    plugins:
      - docker#v3.1.0:
          image: "golang:1.19"
          workdir: /go/src/github.com/buildkite/buildkite-agent-scaler

  - name: ":lambda: Build Lambda"
    key: build-lambda
    depends_on:
      - test
    command: .buildkite/steps/build-lambda.sh
    artifact_paths:
      - handler.zip

  - label: ":s3: Pubish to S3 Branch Location"
    key: s3-branch
    depends_on:
      - build-lambda
    command: .buildkite/steps/upload-to-s3.sh
    agents:
      queue: elastic-runners
    plugins:
      - aws-assume-role-with-web-identity:
          role-arn: arn:aws:iam::032379705303:role/pipeline-buildkite-buildkite-agent-scaler

  - if: build.tag =~ /^.+\$/
    block: ":rocket: Release?"

  - if: build.tag =~ /^.+\$/
    label: ":s3: Publish to S3 Release Location"
    key: s3-release
    depends_on:
      - build-lambda
    command: .buildkite/steps/release-version.sh
    agents:
      queue: elastic-runners
    plugins:
      - aws-assume-role-with-web-identity:
          role-arn: arn:aws:iam::032379705303:role/pipeline-buildkite-buildkite-agent-scaler

  - if: build.tag =~ /^.+\$/
    label: ":github::rocket: github release"
    key: github-release
    depends_on:
      - s3-release
    command: .buildkite/steps/github-release.sh
    agents:
      queue: elastic-runners
    plugins:
      - aws-assume-role-with-web-identity:
          role-arn: arn:aws:iam::445615400570:role/pipeline-buildkite-buildkite-agent-scaler
      - aws-ssm#v1.0.0:
          parameters:
            GITHUB_RELEASE_ACCESS_TOKEN: /pipelines/buildkite-agent-scaler/GITHUB_RELEASE_ACCESS_TOKEN
      - ecr#v2.0.0:
          login: true
          account-ids: "445615400570"
      - docker#v3.5.0:
          image: public.ecr.aws/docker/library/alpine:3.18
          propagate-environment: true
