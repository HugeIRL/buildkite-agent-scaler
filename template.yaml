---
Description: Autoscaler Lambda for ECS Service

Parameters:
  BuildkiteAgentToken:
    Description: Buildkite agent token
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

Mappings:
  LambdaBucket:
    us-east-1 : { Bucket: "buildkite-lambdas" }
    us-east-2 : { Bucket: "buildkite-lambdas-us-east-2" }
    us-west-1 : { Bucket: "buildkite-lambdas-us-west-1" }
    us-west-2 : { Bucket: "buildkite-lambdas-us-west-2" }
    eu-west-1 : { Bucket: "buildkite-lambdas-eu-west-1" }
    eu-west-2 : { Bucket: "buildkite-lambdas-eu-west-2" }
    eu-central-1 : { Bucket: "buildkite-lambdas-eu-central-1" }
    ap-northeast-1 : { Bucket: "buildkite-lambdas-ap-northeast-1" }
    ap-northeast-2 : { Bucket: "buildkite-lambdas-ap-northeast-2" }
    ap-southeast-1 : { Bucket: "buildkite-lambdas-ap-southeast-1" }
    ap-southeast-2 : { Bucket: "buildkite-lambdas-ap-southeast-2" }
    ap-south-1 : { Bucket: "buildkite-lambdas-ap-south-1" }
    sa-east-1 : { Bucket: "buildkite-lambdas-sa-east-1" }

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AccessToCloudwatchLogsForScalerLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !GetAtt ECSLogGroup.Arn
            - Effect: Allow
              Action:
                - ecs:Describe*
                - ecs:UpdateService
              Resource:
                - !Ref ECSAgentService
                - !GetAtt ECSCluster.Arn

  ScalerFunction:
    Type: AWS::Lambda::Function
    DependsOn:
    - LambdaExecutionRole
    Properties:
      Code:
        S3Bucket: { 'Fn::FindInMap': [LambdaBucket, { Ref: 'AWS::Region' }, 'Bucket'] }
        S3Key: "ecs-agent-scaler/builds/20/handler.zip"
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 120
      Handler: handler.Handle
      Runtime: python2.7
      MemorySize: 128
      Environment:
        Variables:
          BUILDKITE_TOKEN: !Ref BuildkiteAgentToken
          BUILDKITE_QUEUE: !Ref BuildkiteQueue
          BUILDKITE_ECS_CLUSTER: !Ref ECSCluster
          BUILDKITE_ECS_SERVICE: !Ref ECSAgentService

  ScheduledRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minute)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt ScalerFunction.Arn
          Id: "TargetScalerFunction"

  PermissionForEventsToInvokeLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: { Ref: ScalerFunction }
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt ScheduledRule.Arn
