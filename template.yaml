---
Description: Autoscaling Lambda for Buildkite Agents

Transform: AWS::Serverless-2016-10-31

Parameters:
  AutoscalingLambdaExecutionRole:
    Description: IAM Role ARN
    Type: String
    Default: ''

  BuildkiteAgentTokenParameter:
    Description: Buildkite agent token parameter
    Type: AWS::SSM::Parameter::Name

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

  AgentsPerInstance:
    Description: ""
    Type: Number

  MinSize:
    Description: ""
    Type: String

  MaxSize:
    Description: ""
    Type: String

  AutoScaleGroup:
    Description: The name of the ALB to autoscale
    Type: String
    Default: default

  ScaleOutFactor:
    Description: ""
    Type: Number

  ScaleOutForWaitingJobs:
    Description: ""
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

Conditions:
  CreateRole: !Equals [ !Ref AutoscalingLambdaExecutionRole, '' ]

Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Condition: CreateRole
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AutoScalingGroups
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:SetDesiredCapacity
                Resource: '*'
        - PolicyName: WriteCloudwatchMetrics
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
        - PolicyName: ReadAgentToken
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - ssm:GetParameter
                  Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${BuildkiteAgentTokenParameter}

  AutoscalingFunction:
    Type: AWS::Serverless::Function
    Properties:
      Code:
      Role: !If [ CreateRole, !Ref ExecutionRole, !Ref AutoscalingLambdaExecutionRole ]
      Timeout: 120
      Handler: handler
      Runtime: go1.x
      MemorySize: 128
      Environment:
        Variables:
          BUILDKITE_AGENT_TOKEN_SSM_KEY: !Ref BuildkiteAgentTokenParameter
          BUILDKITE_QUEUE:               !Ref BuildkiteQueue
          AGENTS_PER_INSTANCE:           !Ref AgentsPerInstance
          CLOUDWATCH_METRICS:            "1"
          DISABLE_SCALE_IN:              "1"
          ASG_NAME:                      !Ref AutoScaleGroup
          MIN_SIZE:                      !Ref MinSize
          MAX_SIZE:                      !Ref MaxSize
          SCALE_OUT_FACTOR:              !Ref ScaleOutFactor
          INCLUDE_WAITING:               !Ref ScaleOutForWaitingJobs
          LAMBDA_TIMEOUT:                "50s"
          LAMBDA_INTERVAL:               "10s"
      Events:
        - Type: Schedule
          Properties:
            Schedule: "rate(1 minute)"

  # This mirrors the group that would be created by the lambda, but enforces
  # a retention period and also ensures it's removed when the stack is removed
  LogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub "/aws/lambda/${!Ref AutoscalingFunction}"
      RetentionInDays: 1
