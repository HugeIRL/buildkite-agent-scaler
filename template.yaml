---
Description: Autoscaling Lambda for Buildkite Agents on an ALB

Parameters:
  BuildkiteAgentToken:
    Description: Buildkite agent token
    Type: String
    NoEcho: true
    MinLength: 1

  BuildkiteQueue:
    Description: Queue name that agents will use, targeted in pipeline steps using "queue={value}"
    Type: String
    Default: default
    MinLength: 1

  AgentAutoScaleGroup:
    Description: The name of the ALB to autoscale
    Type: String
    Default: default

Mappings:
  LambdaBucket:
    us-east-1 : { Bucket: "buildkite-lambdas" }
    us-east-2 : { Bucket: "buildkite-lambdas-us-east-2" }
    us-west-1 : { Bucket: "buildkite-lambdas-us-west-1" }
    us-west-2 : { Bucket: "buildkite-lambdas-us-west-2" }
    eu-west-1 : { Bucket: "buildkite-lambdas-eu-west-1" }
    eu-west-2 : { Bucket: "buildkite-lambdas-eu-west-2" }
    eu-central-1 : { Bucket: "buildkite-lambdas-eu-central-1" }
    ap-northeast-1 : { Bucket: "buildkite-lambdas-ap-northeast-1" }
    ap-northeast-2 : { Bucket: "buildkite-lambdas-ap-northeast-2" }
    ap-southeast-1 : { Bucket: "buildkite-lambdas-ap-southeast-1" }
    ap-southeast-2 : { Bucket: "buildkite-lambdas-ap-southeast-2" }
    ap-south-1 : { Bucket: "buildkite-lambdas-ap-south-1" }
    sa-east-1 : { Bucket: "buildkite-lambdas-sa-east-1" }

Resources:
  AutoscalingLambdaExecutionRole:
    Type: AWS::IAM::Role
    Condition: UseLambdaAutoscaling
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DescribeECSResources
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - ecs:Describe*
                - ecs:List*
              Resource: '*'
        - PolicyName: ModifySpotFleet
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - ec2:DescribeSpotFleetRequests
                - ec2:ModifySpotFleetRequest
              Resource: '*'


  # This mirrors the group that would be created by the lambda, but enforces
  # a retention period and also ensures it's removed when the stack is removed
  AutoscalingLogGroup:
    Type: "AWS::Logs::LogGroup"
    Condition: UseLambdaAutoscaling
    Properties:
      LogGroupName: !Join ["/", ["/aws/lambda", !Ref AutoscalingFunction]]
      RetentionInDays: 1

  AutoscalingFunction:
    Type: AWS::Lambda::Function
    Condition: UseLambdaAutoscaling
    Properties:
      Code:
        S3Bucket: !Ref AutoscalingLambdaBucket
        S3Key: "ec2-agent-scaler.zip"
        S3ObjectVersion: !Ref AutoscalingLambdaObjectVersion
      Role: !GetAtt AutoscalingLambdaExecutionRole.Arn
      Timeout: 120
      Handler: handler
      Runtime: go1.x
      MemorySize: 128
      Environment:
        Variables:
          BUILDKITE_AGENT_TOKEN: !Ref BuildkiteAgentToken
          BUILDKITE_QUEUE:       !Ref BuildkiteQueue
          ASG_NAME:              !Ref AgentAutoScaleGroup
          LAMBDA_TIMEOUT:        1m
          LAMBDA_INTERVAL:       20s

  AutoscalingLambdaScheduledRule:
    Type: "AWS::Events::Rule"
    Condition: UseLambdaAutoscaling
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 minute)"
      State: !Ref AutoscalingLambdaScheduleState
      Targets:
        - Arn: !GetAtt AutoscalingFunction.Arn
          Id: "AutoscalingFunction"

  PermissionForEventsToInvokeAutoscalingLambda:
    Type: "AWS::Lambda::Permission"
    Condition: UseLambdaAutoscaling
    Properties:
      FunctionName: !Ref AutoscalingFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt AutoscalingLambdaScheduledRule.Arn
